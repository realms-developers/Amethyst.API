// Code is generated by the Amethyst.PacketGenerator (v1.0.5.0) tool.
// Do not edit this file manually.
#pragma warning disable CA1051

using Amethyst.Network.Core.Packets;
using Amethyst.Network.Structures;
using Amethyst.Network.Utilities;

namespace Amethyst.Network.Packets;

public sealed class PlayerOrEntityTeleportPacket : IPacket<PlayerOrEntityTeleport>
{
    public int PacketID => 65;

    public PlayerOrEntityTeleport Deserialize(ReadOnlySpan<byte> data, int offset = 0)
    {
        FastPacketReader reader = new(data, offset);

        NetBitsByte bitsByte = reader.ReadByte();
        short entityIndex = reader.ReadInt16();
        NetVector2 targetPosition = reader.ReadNetVector2();
        byte style = 0;
        int? extraInfo = null;
        if (bitsByte[0])
        {
            style = reader.ReadByte();
        }
        if (bitsByte[1])
        {
            extraInfo = reader.ReadInt32();
        }

        return new PlayerOrEntityTeleport
        {
            Flags = bitsByte,
            EntityIndex = entityIndex,
            TargetPosition = targetPosition,
            Style = style,
            ExtraInfo = extraInfo
        };
    }

    public byte[] Serialize(PlayerOrEntityTeleport packet)
    {
        FastPacketWriter writer = new(65, 128);

        writer.WriteByte(packet.Flags);
        writer.WriteInt16(packet.EntityIndex);
        writer.WriteNetVector2(packet.TargetPosition);
        if (packet.Flags[0])
        {
            writer.WriteByte(packet.Style);
        }
        if (packet.Flags[1])
        {
            if (packet.ExtraInfo.HasValue)
            {
                writer.WriteInt32(packet.ExtraInfo.Value);
            }
            else
            {
                writer.WriteInt32(0); // Default value if ExtraInfo is null
            }
        }
        else
        {
            writer.WriteInt32(0); // Default value if ExtraInfo is not used
        }

        return writer.BuildPacket();
    }
}

public struct PlayerOrEntityTeleport
{
    public NetBitsByte Flags;
    public short EntityIndex;
    public NetVector2 TargetPosition;
    public byte Style;
    public int? ExtraInfo;
}
