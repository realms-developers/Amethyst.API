// Code is generated by the Amethyst.PacketGenerator (v1.0.5.0) tool.
// Do not edit this file manually.
#pragma warning disable CA1051

using Amethyst.Network.Core.Packets;
using Amethyst.Network.Utilities;

namespace Amethyst.Network.Packets;

public sealed class PlayerShootFromCannonPacket : IPacket<PlayerShootFromCannon>
{
    public int PacketID => 108;

    public PlayerShootFromCannon Deserialize(ReadOnlySpan<byte> data, int offset = 0)
    {
        FastPacketReader reader = new(data, offset);

        int Damage = reader.ReadInt32();
        float Knockback = reader.ReadSingle();
        short X = reader.ReadInt16();
        short Y = reader.ReadInt16();
        short Angle = reader.ReadInt16();
        short Ammo = reader.ReadInt16();
        byte PlayerIndex = reader.ReadByte();

        return new PlayerShootFromCannon
        {
            Damage = Damage,
            Knockback = Knockback,
            X = X,
            Y = Y,
            Angle = Angle,
            Ammo = Ammo,
            PlayerIndex = PlayerIndex,
        };
    }

    public byte[] Serialize(PlayerShootFromCannon packet)
    {
        FastPacketWriter writer = new(108, 128);

        writer.WriteInt32(packet.Damage);
        writer.WriteSingle(packet.Knockback);
        writer.WriteInt16(packet.X);
        writer.WriteInt16(packet.Y);
        writer.WriteInt16(packet.Angle);
        writer.WriteInt16(packet.Ammo);
        writer.WriteByte(packet.PlayerIndex);

        return writer.BuildPacket();
    }
}

public struct PlayerShootFromCannon
{
    public int Damage;
    public float Knockback;
    public short X;
    public short Y;
    public short Angle;
    public short Ammo;
    public byte PlayerIndex;
}