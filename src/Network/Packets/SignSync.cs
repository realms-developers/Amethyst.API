// Code is generated by the Amethyst.PacketGenerator (v1.0.5.0) tool.
// Do not edit this file manually.
#pragma warning disable CA1051

using Amethyst.Network.Engine.Packets;
using Amethyst.Network.Utilities;

namespace Amethyst.Network.Packets;

public sealed class SignSyncPacket : IPacket<SignSync>
{
    public int PacketID => 47;

    public static SignSync Deserialize(ReadOnlySpan<byte> data, int offset = 0)
    {
        FastPacketReader reader = new(data, offset);

        short SignIndex = reader.ReadInt16();
        short SignX = reader.ReadInt16();
        short SignY = reader.ReadInt16();
        string SignText = reader.ReadString();
        byte PlayerIndex = reader.ReadByte();
        byte Flags = reader.ReadByte();

        return new SignSync
        {
            SignIndex = SignIndex,
            SignX = SignX,
            SignY = SignY,
            SignText = SignText,
            PlayerIndex = PlayerIndex,
            Flags = Flags,
        };
    }

    public static byte[] Serialize(SignSync packet)
    {
        FastPacketWriter writer = new(47, 128);

        writer.WriteInt16(packet.SignIndex);
        writer.WriteInt16(packet.SignX);
        writer.WriteInt16(packet.SignY);
        writer.WriteString(packet.SignText);
        writer.WriteByte(packet.PlayerIndex);
        writer.WriteByte(packet.Flags);

        return writer.BuildPacket();
    }
}

public struct SignSync
{
    public short SignIndex;
    public short SignX;
    public short SignY;
    public string SignText;
    public byte PlayerIndex;
    public byte Flags;
}
