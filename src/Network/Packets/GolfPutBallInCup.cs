// Code is generated by the Amethyst.PacketGenerator (v1.0.5.0) tool.
// Do not edit this file manually.
#pragma warning disable CA1051

using Amethyst.Network.Core.Packets;
using Amethyst.Network.Utilities;

namespace Amethyst.Network.Packets;

public sealed class GolfPutBallInCupPacket : IPacket<GolfPutBallInCup>
{
    public int PacketID => 128;

    public GolfPutBallInCup Deserialize(ReadOnlySpan<byte> data, int offset = 0)
    {
        FastPacketReader reader = new(data, offset);

        byte PlayerIndex = reader.ReadByte();
        ushort X = reader.ReadUInt16();
        ushort Y = reader.ReadUInt16();
        ushort HitCount = reader.ReadUInt16();
        ushort ProjectileID = reader.ReadUInt16();

        return new GolfPutBallInCup
        {
            PlayerIndex = PlayerIndex,
            X = X,
            Y = Y,
            HitCount = HitCount,
            ProjectileID = ProjectileID,
        };
    }

    public byte[] Serialize(GolfPutBallInCup packet)
    {
        FastPacketWriter writer = new(128, 128);

        writer.WriteByte(packet.PlayerIndex);
        writer.WriteUInt16(packet.X);
        writer.WriteUInt16(packet.Y);
        writer.WriteUInt16(packet.HitCount);
        writer.WriteUInt16(packet.ProjectileID);

        return writer.BuildPacket();
    }
}

public struct GolfPutBallInCup
{
    public byte PlayerIndex;
    public ushort X;
    public ushort Y;
    public ushort HitCount;
    public ushort ProjectileID;
}