// Code is generated by the Amethyst.PacketGenerator (v1.0.5.0) tool.
// Do not edit this file manually.
#pragma warning disable CA1051

using Amethyst.Network.Engine.Packets;
using Amethyst.Network.Utilities;

namespace Amethyst.Network.Packets;

public sealed class WorldPlaceObjectPacket : IPacket<WorldPlaceObject>
{
    public int PacketID => 79;

    public static WorldPlaceObject Deserialize(ReadOnlySpan<byte> data, int offset = 0)
    {
        FastPacketReader reader = new(data, offset);

        short TileX = reader.ReadInt16();
        short TileY = reader.ReadInt16();
        short Type = reader.ReadInt16();
        short Style = reader.ReadInt16();
        byte Alternate = reader.ReadByte();
        sbyte Random = reader.ReadSByte();
        bool Direction = reader.ReadBoolean();

        return new WorldPlaceObject
        {
            TileX = TileX,
            TileY = TileY,
            Type = Type,
            Style = Style,
            Alternate = Alternate,
            Random = Random,
            Direction = Direction,
        };
    }

    public static byte[] Serialize(WorldPlaceObject packet)
    {
        FastPacketWriter writer = new(79, 128);

        writer.WriteInt16(packet.TileX);
        writer.WriteInt16(packet.TileY);
        writer.WriteInt16(packet.Type);
        writer.WriteInt16(packet.Style);
        writer.WriteByte(packet.Alternate);
        writer.WriteSByte(packet.Random);
        writer.WriteBoolean(packet.Direction);

        return writer.BuildPacket();
    }
}

public struct WorldPlaceObject
{
    public short TileX;
    public short TileY;
    public short Type;
    public short Style;
    public byte Alternate;
    public sbyte Random;
    public bool Direction;
}
