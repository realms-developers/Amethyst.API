// Code is generated by the Amethyst.PacketGenerator (v1.0.5.0) tool.
// Do not edit this file manually.
#pragma warning disable CA1051

using Amethyst.Network.Engine.Packets;
using Amethyst.Network.Structures;
using Amethyst.Network.Utilities;

namespace Amethyst.Network.Packets;

public sealed class ItemUpdateOldPacket : IPacket<ItemUpdateOld>
{
    public int PacketID => 21;

    public static ItemUpdateOld Deserialize(ReadOnlySpan<byte> data, int offset = 0)
    {
        FastPacketReader reader = new(data, offset);

        short ItemIndex = reader.ReadInt16();
        NetVector2 Position = reader.ReadNetVector2();
        NetVector2 Velocity = reader.ReadNetVector2();
        short ItemStack = reader.ReadInt16();
        byte ItemPrefix = reader.ReadByte();
        byte OwnIgnore = reader.ReadByte();
        short ItemType = reader.ReadInt16();

        return new ItemUpdateOld
        {
            ItemIndex = ItemIndex,
            Position = Position,
            Velocity = Velocity,
            ItemStack = ItemStack,
            ItemPrefix = ItemPrefix,
            OwnIgnore = OwnIgnore,
            ItemType = ItemType,
        };
    }

    public static byte[] Serialize(ItemUpdateOld packet)
    {
        FastPacketWriter writer = new(21, 128);

        writer.WriteInt16(packet.ItemIndex);
        writer.WriteNetVector2(packet.Position);
        writer.WriteNetVector2(packet.Velocity);
        writer.WriteInt16(packet.ItemStack);
        writer.WriteByte(packet.ItemPrefix);
        writer.WriteByte(packet.OwnIgnore);
        writer.WriteInt16(packet.ItemType);

        return writer.BuildPacket();
    }
}

public struct ItemUpdateOld
{
    public short ItemIndex;
    public NetVector2 Position;
    public NetVector2 Velocity;
    public short ItemStack;
    public byte ItemPrefix;
    public byte OwnIgnore;
    public short ItemType;
}
