// Code is generated by the Amethyst.PacketGenerator (v1.0.5.0) tool.
// Do not edit this file manually.
#pragma warning disable CA1051

using Amethyst.Network.Core.Packets;
using Amethyst.Network.Utilities;

namespace Amethyst.Network.Packets;

public sealed class NPCCavernMonsterTypePacket : IPacket<NPCCavernMonsterType>
{
    public int PacketID => 136;

    public NPCCavernMonsterType Deserialize(ReadOnlySpan<byte> data, int offset = 0)
    {
        FastPacketReader reader = new(data, offset);

        ushort[][] NPCTypes = new ushort[3][];
        for (int i = 0; i < NPCTypes.Length; i++)
        {
            NPCTypes[i] = reader.ReadUInt16Array(2);
        }

        return new NPCCavernMonsterType
        {
            NPCTypes = NPCTypes,
        };
    }

    public byte[] Serialize(NPCCavernMonsterType packet)
    {
        FastPacketWriter writer = new(136, 128);

        for (int i = 0; i < packet.NPCTypes.Length; i++)
        {
            for (int j = 0; j < packet.NPCTypes[i].Length; j++)
            {
                if (packet.NPCTypes[i].Length != 2)
                {
                    throw new ArgumentException("Each NPCTypes array must have exactly 2 elements.");
                }
            }
        }

        return writer.BuildPacket();
    }
}

public struct NPCCavernMonsterType
{
    public ushort[][] NPCTypes;
}
