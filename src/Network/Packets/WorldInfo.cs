// Code is generated by the Amethyst.PacketGenerator (v1.0.5.0) tool.
// Do not edit this file manually.
#pragma warning disable CA1051

using Amethyst.Network.Core.Packets;
using Amethyst.Network.Utilities;

namespace Amethyst.Network.Packets;

public sealed class WorldInfoPacket : IPacket<WorldInfo>
{
    public int PacketID => 7;

    public static WorldInfo Deserialize(ReadOnlySpan<byte> data, int offset = 0)
    {
        FastPacketReader reader = new(data, offset);

        int Time = reader.ReadInt32();
        byte Flags = reader.ReadByte();
        byte MoonPhase = reader.ReadByte();
        short WorldWidth = reader.ReadInt16();
        short WorldHeight = reader.ReadInt16();
        short SpawnX = reader.ReadInt16();
        short SpawnY = reader.ReadInt16();
        short SurfaceLevel = reader.ReadInt16();
        short RockLevel = reader.ReadInt16();
        int WorldID = reader.ReadInt32();
        string WorldName = reader.ReadString();
        byte GameMode = reader.ReadByte();
        byte[] WorldUID = reader.ReadByteArray(16);
        ulong GeneratorVersion = reader.ReadUInt64();
        byte MoonType = reader.ReadByte();
        byte Background0 = reader.ReadByte();
        byte Background10 = reader.ReadByte();
        byte Background11 = reader.ReadByte();
        byte Background12 = reader.ReadByte();
        byte Background1 = reader.ReadByte();
        byte Background2 = reader.ReadByte();
        byte Background3 = reader.ReadByte();
        byte Background4 = reader.ReadByte();
        byte Background5 = reader.ReadByte();
        byte Background6 = reader.ReadByte();
        byte Background7 = reader.ReadByte();
        byte Background8 = reader.ReadByte();
        byte Background9 = reader.ReadByte();
        byte BackgroundIceStyle = reader.ReadByte();
        byte BackgroundJungleStyle = reader.ReadByte();
        byte BackgroundHellStyle = reader.ReadByte();
        float WindSpeedTarget = reader.ReadSingle();
        byte CloudsCount = reader.ReadByte();
        int TreeX1 = reader.ReadInt32();
        int TreeX2 = reader.ReadInt32();
        int TreeX3 = reader.ReadInt32();
        byte TreeStyle1 = reader.ReadByte();
        byte TreeStyle2 = reader.ReadByte();
        byte TreeStyle3 = reader.ReadByte();
        byte TreeStyle4 = reader.ReadByte();
        int BackgroundCaveX1 = reader.ReadInt32();
        int BackgroundCaveX2 = reader.ReadInt32();
        int BackgroundCaveX3 = reader.ReadInt32();
        byte BackgroundCaveStyle1 = reader.ReadByte();
        byte BackgroundCaveStyle2 = reader.ReadByte();
        byte BackgroundCaveStyle3 = reader.ReadByte();
        byte BackgroundCaveStyle4 = reader.ReadByte();
        byte[] TreeTops = reader.ReadByteArray(13);
        float MaxRaining = reader.ReadSingle();
        byte Flags1 = reader.ReadByte();
        byte Flags2 = reader.ReadByte();
        byte Flags3 = reader.ReadByte();
        byte Flags4 = reader.ReadByte();
        byte Flags5 = reader.ReadByte();
        byte Flags6 = reader.ReadByte();
        byte Flags7 = reader.ReadByte();
        byte Flags8 = reader.ReadByte();
        byte Flags9 = reader.ReadByte();
        byte Flags10 = reader.ReadByte();
        byte SundialCooldown = reader.ReadByte();
        byte MoondialCooldown = reader.ReadByte();
        short TierCopper = reader.ReadInt16();
        short TierIron = reader.ReadInt16();
        short TierSilver = reader.ReadInt16();
        short TierGold = reader.ReadInt16();
        short TierCobalt = reader.ReadInt16();
        short TierMythril = reader.ReadInt16();
        short TierAdamantite = reader.ReadInt16();
        sbyte InvasionType = reader.ReadSByte();
        ulong LobbyID = reader.ReadUInt64();
        float IntendedSeverity = reader.ReadSingle();

        return new WorldInfo
        {
            Time = Time,
            Flags = Flags,
            MoonPhase = MoonPhase,
            WorldWidth = WorldWidth,
            WorldHeight = WorldHeight,
            SpawnX = SpawnX,
            SpawnY = SpawnY,
            SurfaceLevel = SurfaceLevel,
            RockLevel = RockLevel,
            WorldID = WorldID,
            WorldName = WorldName,
            GameMode = GameMode,
            WorldUID = WorldUID,
            GeneratorVersion = GeneratorVersion,
            MoonType = MoonType,
            Background0 = Background0,
            Background10 = Background10,
            Background11 = Background11,
            Background12 = Background12,
            Background1 = Background1,
            Background2 = Background2,
            Background3 = Background3,
            Background4 = Background4,
            Background5 = Background5,
            Background6 = Background6,
            Background7 = Background7,
            Background8 = Background8,
            Background9 = Background9,
            BackgroundIceStyle = BackgroundIceStyle,
            BackgroundJungleStyle = BackgroundJungleStyle,
            BackgroundHellStyle = BackgroundHellStyle,
            WindSpeedTarget = WindSpeedTarget,
            CloudsCount = CloudsCount,
            TreeX1 = TreeX1,
            TreeX2 = TreeX2,
            TreeX3 = TreeX3,
            TreeStyle1 = TreeStyle1,
            TreeStyle2 = TreeStyle2,
            TreeStyle3 = TreeStyle3,
            TreeStyle4 = TreeStyle4,
            BackgroundCaveX1 = BackgroundCaveX1,
            BackgroundCaveX2 = BackgroundCaveX2,
            BackgroundCaveX3 = BackgroundCaveX3,
            BackgroundCaveStyle1 = BackgroundCaveStyle1,
            BackgroundCaveStyle2 = BackgroundCaveStyle2,
            BackgroundCaveStyle3 = BackgroundCaveStyle3,
            BackgroundCaveStyle4 = BackgroundCaveStyle4,
            TreeTops = TreeTops,
            MaxRaining = MaxRaining,
            Flags1 = Flags,
            Flags2 = Flags2,
            Flags3 = Flags3,
            Flags4 = Flags4,
            Flags5 = Flags5,
            Flags6 = Flags6,
            Flags7 = Flags7,
            Flags8 = Flags8,
            Flags9 = Flags9,
            Flags10 = Flags10,
            SundialCooldown = SundialCooldown,
            MoondialCooldown = MoondialCooldown,
            TierCopper = TierCopper,
            TierIron = TierIron,
            TierSilver = TierSilver,
            TierGold = TierGold,
            TierCobalt = TierCobalt,
            TierMythril = TierMythril,
            TierAdamantite = TierAdamantite,
            InvasionType = InvasionType,
            LobbyID = LobbyID,
            IntendedSeverity = IntendedSeverity,
        };
    }

    public static byte[] Serialize(WorldInfo packet)
    {
        FastPacketWriter writer = new(7, 128);

        writer.WriteInt32(packet.Time);
        writer.WriteByte(packet.Flags);
        writer.WriteByte(packet.MoonPhase);
        writer.WriteInt16(packet.WorldWidth);
        writer.WriteInt16(packet.WorldHeight);
        writer.WriteInt16(packet.SpawnX);
        writer.WriteInt16(packet.SpawnY);
        writer.WriteInt16(packet.SurfaceLevel);
        writer.WriteInt16(packet.RockLevel);
        writer.WriteInt32(packet.WorldID);
        writer.WriteString(packet.WorldName);
        writer.WriteByte(packet.GameMode);
        writer.WriteByteArray(packet.WorldUID);
        writer.WriteUInt64(packet.GeneratorVersion);
        writer.WriteByte(packet.MoonType);
        writer.WriteByte(packet.Background0);
        writer.WriteByte(packet.Background10);
        writer.WriteByte(packet.Background11);
        writer.WriteByte(packet.Background12);
        writer.WriteByte(packet.Background1);
        writer.WriteByte(packet.Background2);
        writer.WriteByte(packet.Background3);
        writer.WriteByte(packet.Background4);
        writer.WriteByte(packet.Background5);
        writer.WriteByte(packet.Background6);
        writer.WriteByte(packet.Background7);
        writer.WriteByte(packet.Background8);
        writer.WriteByte(packet.Background9);
        writer.WriteByte(packet.BackgroundIceStyle);
        writer.WriteByte(packet.BackgroundJungleStyle);
        writer.WriteByte(packet.BackgroundHellStyle);
        writer.WriteSingle(packet.WindSpeedTarget);
        writer.WriteByte(packet.CloudsCount);
        writer.WriteInt32(packet.TreeX1);
        writer.WriteInt32(packet.TreeX2);
        writer.WriteInt32(packet.TreeX3);
        writer.WriteByte(packet.TreeStyle1);
        writer.WriteByte(packet.TreeStyle2);
        writer.WriteByte(packet.TreeStyle3);
        writer.WriteByte(packet.TreeStyle4);
        writer.WriteInt32(packet.BackgroundCaveX1);
        writer.WriteInt32(packet.BackgroundCaveX2);
        writer.WriteInt32(packet.BackgroundCaveX3);
        writer.WriteByte(packet.BackgroundCaveStyle1);
        writer.WriteByte(packet.BackgroundCaveStyle2);
        writer.WriteByte(packet.BackgroundCaveStyle3);
        writer.WriteByte(packet.BackgroundCaveStyle4);
        writer.WriteByteArray(packet.TreeTops);
        writer.WriteSingle(packet.MaxRaining);
        writer.WriteByte(packet.Flags);
        writer.WriteByte(packet.Flags2);
        writer.WriteByte(packet.Flags3);
        writer.WriteByte(packet.Flags4);
        writer.WriteByte(packet.Flags5);
        writer.WriteByte(packet.Flags6);
        writer.WriteByte(packet.Flags7);
        writer.WriteByte(packet.Flags8);
        writer.WriteByte(packet.Flags9);
        writer.WriteByte(packet.Flags10);
        writer.WriteByte(packet.SundialCooldown);
        writer.WriteByte(packet.MoondialCooldown);
        writer.WriteInt16(packet.TierCopper);
        writer.WriteInt16(packet.TierIron);
        writer.WriteInt16(packet.TierSilver);
        writer.WriteInt16(packet.TierGold);
        writer.WriteInt16(packet.TierCobalt);
        writer.WriteInt16(packet.TierMythril);
        writer.WriteInt16(packet.TierAdamantite);
        writer.WriteSByte(packet.InvasionType);
        writer.WriteUInt64(packet.LobbyID);
        writer.WriteSingle(packet.IntendedSeverity);

        return writer.BuildPacket();
    }
}

public struct WorldInfo
{
    public int Time;
    public byte Flags;
    public byte MoonPhase;
    public short WorldWidth;
    public short WorldHeight;
    public short SpawnX;
    public short SpawnY;
    public short SurfaceLevel;
    public short RockLevel;
    public int WorldID;
    public string WorldName;
    public byte GameMode;
    public byte[] WorldUID;
    public ulong GeneratorVersion;
    public byte MoonType;
    public byte Background0;
    public byte Background10;
    public byte Background11;
    public byte Background12;
    public byte Background1;
    public byte Background2;
    public byte Background3;
    public byte Background4;
    public byte Background5;
    public byte Background6;
    public byte Background7;
    public byte Background8;
    public byte Background9;
    public byte BackgroundIceStyle;
    public byte BackgroundJungleStyle;
    public byte BackgroundHellStyle;
    public float WindSpeedTarget;
    public byte CloudsCount;
    public int TreeX1;
    public int TreeX2;
    public int TreeX3;
    public byte TreeStyle1;
    public byte TreeStyle2;
    public byte TreeStyle3;
    public byte TreeStyle4;
    public int BackgroundCaveX1;
    public int BackgroundCaveX2;
    public int BackgroundCaveX3;
    public byte BackgroundCaveStyle1;
    public byte BackgroundCaveStyle2;
    public byte BackgroundCaveStyle3;
    public byte BackgroundCaveStyle4;
    public byte[] TreeTops;
    public float MaxRaining;
    public byte Flags1;
    public byte Flags2;
    public byte Flags3;
    public byte Flags4;
    public byte Flags5;
    public byte Flags6;
    public byte Flags7;
    public byte Flags8;
    public byte Flags9;
    public byte Flags10;
    public byte SundialCooldown;
    public byte MoondialCooldown;
    public short TierCopper;
    public short TierIron;
    public short TierSilver;
    public short TierGold;
    public short TierCobalt;
    public short TierMythril;
    public short TierAdamantite;
    public sbyte InvasionType;
    public ulong LobbyID;
    public float IntendedSeverity;
}
