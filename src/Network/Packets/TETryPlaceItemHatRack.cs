// Code is generated by the Amethyst.PacketGenerator (v1.0.5.0) tool.
// Do not edit this file manually.
#pragma warning disable CA1051

using Amethyst.Network.Core.Packets;
using Amethyst.Network.Utilities;

namespace Amethyst.Network.Packets;

public sealed class TETryPlaceItemHatRackPacket : IPacket<TETryPlaceItemHatRack>
{
    public int PacketID => 124;

    public TETryPlaceItemHatRack Deserialize(ReadOnlySpan<byte> data, int offset = 0)
    {
        FastPacketReader reader = new(data, offset);

        byte PlayerIndex = reader.ReadByte();
        int TEIndex = reader.ReadInt32();
        byte SlotIndex = reader.ReadByte();
        ushort ItemType = reader.ReadUInt16();
        ushort ItemStack = reader.ReadUInt16();
        byte Prefix = reader.ReadByte();

        return new TETryPlaceItemHatRack
        {
            PlayerIndex = PlayerIndex,
            TEIndex = TEIndex,
            SlotIndex = SlotIndex,
            ItemType = ItemType,
            ItemStack = ItemStack,
            Prefix = Prefix,
        };
    }

    public byte[] Serialize(TETryPlaceItemHatRack packet)
    {
        FastPacketWriter writer = new(124, 128);

        writer.WriteByte(packet.PlayerIndex);
        writer.WriteInt32(packet.TEIndex);
        writer.WriteByte(packet.SlotIndex);
        writer.WriteUInt16(packet.ItemType);
        writer.WriteUInt16(packet.ItemStack);
        writer.WriteByte(packet.Prefix);

        return writer.BuildPacket();
    }
}

public struct TETryPlaceItemHatRack
{
    public byte PlayerIndex;
    public int TEIndex;
    public byte SlotIndex;
    public ushort ItemType;
    public ushort ItemStack;
    public byte Prefix;
}