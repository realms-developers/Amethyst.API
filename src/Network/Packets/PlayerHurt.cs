// Code is generated by the Amethyst.PacketGenerator (v1.0.5.0) tool.
// Do not edit this file manually.
#pragma warning disable CA1051

using Amethyst.Network.Core.Packets;
using Amethyst.Network.Structures;
using Amethyst.Network.Utilities;

namespace Amethyst.Network.Packets;

public sealed class PlayerHurtPacket : IPacket<PlayerHurt>
{
    public int PacketID => 117;

    public static PlayerHurt Deserialize(ReadOnlySpan<byte> data, int offset = 0)
    {
        FastPacketReader reader = new(data, offset);

        byte PlayerIndex = reader.ReadByte();
        NetDeathReason Reason = reader.ReadNetDeathReason();
        short Damage = reader.ReadInt16();
        byte HitDirection = reader.ReadByte();
        byte Flags = reader.ReadByte();
        sbyte CooldownCounter = reader.ReadSByte();

        return new PlayerHurt
        {
            PlayerIndex = PlayerIndex,
            Reason = Reason,
            Damage = Damage,
            HitDirection = HitDirection,
            Flags = Flags,
            CooldownCounter = CooldownCounter,
        };
    }

    public static byte[] Serialize(PlayerHurt packet)
    {
        FastPacketWriter writer = new(117, 128);

        writer.WriteByte(packet.PlayerIndex);
        writer.WriteNetDeathReason(packet.Reason);
        writer.WriteInt16(packet.Damage);
        writer.WriteByte(packet.HitDirection);
        writer.WriteByte(packet.Flags);
        writer.WriteSByte(packet.CooldownCounter);

        return writer.BuildPacket();
    }
}

public struct PlayerHurt
{
    public byte PlayerIndex;
    public NetDeathReason Reason;
    public short Damage;
    public byte HitDirection;
    public byte Flags;
    public sbyte CooldownCounter;
}
