// Code is generated by the Amethyst.PacketGenerator (v1.0.5.0) tool.
// Do not edit this file manually.
#pragma warning disable CA1051

using Amethyst.Server.Network.Core.Packets;
using Amethyst.Server.Network.Utilities;

namespace Amethyst.Server.Network.Packets;

public sealed class PlayerOrEntityTeleportPacket : IPacket<PlayerOrEntityTeleport>
{
    public int PacketID => 65;

    public PlayerOrEntityTeleport Deserialize(ReadOnlySpan<byte> data, int offset = 0)
    {
        FastPacketReader reader = new(data, offset);

        byte Flags = reader.ReadByte();
        short EntityIndex = reader.ReadInt16();
        float TargetX = reader.ReadSingle();
        float TargetY = reader.ReadSingle();
        byte Style = reader.ReadByte();
        int? ExtraInfo = reader.ReadUNKNOWN();

        return new PlayerOrEntityTeleport
        {
            Flags = Flags,
            EntityIndex = EntityIndex,
            TargetX = TargetX,
            TargetY = TargetY,
            Style = Style,
            ExtraInfo = ExtraInfo,
        };
    }

    public byte[] Serialize(PlayerOrEntityTeleport packet)
    {
        FastPacketWriter writer = new(65, 128);

        writer.WriteByte(packet.Flags);
        writer.WriteInt16(packet.EntityIndex);
        writer.WriteSingle(packet.TargetX);
        writer.WriteSingle(packet.TargetY);
        writer.WriteByte(packet.Style);
        writer.WriteUNKNOWN(packet.ExtraInfo);

        return writer.BuildPacket();
    }
}

public struct PlayerOrEntityTeleport
{
    public byte Flags;
    public short EntityIndex;
    public float TargetX;
    public float TargetY;
    public byte Style;
    public int? ExtraInfo;
}