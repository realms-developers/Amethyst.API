// Code is generated by the Amethyst.PacketGenerator (v1.0.5.0) tool.
// Do not edit this file manually.
#pragma warning disable CA1051

using Amethyst.Server.Network.Core.Packets;
using Amethyst.Server.Network.Utilities;

namespace Amethyst.Server.Network.Packets;

public sealed class NPCStrikePacket : IPacket<NPCStrike>
{
    public int PacketID => 28;

    public NPCStrike Deserialize(ReadOnlySpan<byte> data, int offset = 0)
    {
        FastPacketReader reader = new(data, offset);

        short NPCIndex = reader.ReadInt16();
        short Damage = reader.ReadInt16();
        float Knockback = reader.ReadSingle();
        byte HitContext = (byte)(reader.ReadByte() - 1);
        bool IsCrit = reader.ReadBoolean();

        return new NPCStrike
        {
            NPCIndex = NPCIndex,
            Damage = Damage,
            Knockback = Knockback,
            HitContext = HitContext,
            IsCrit = IsCrit
        };
    }

    public byte[] Serialize(NPCStrike packet)
    {
        FastPacketWriter writer = new(28, 128);

        writer.WriteInt16(packet.NPCIndex);
        writer.WriteInt16(packet.Damage);
        writer.WriteSingle(packet.Knockback);
        writer.WriteByte((byte)(packet.HitContext + 1));
        writer.WriteBoolean(packet.IsCrit);

        return writer.BuildPacket();
    }
}

public struct NPCStrike
{
    public short NPCIndex;
    public short Damage;
    public float Knockback;
    public byte HitContext;
    public bool IsCrit;
}
