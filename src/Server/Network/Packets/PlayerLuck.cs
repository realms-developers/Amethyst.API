// Code is generated by the Amethyst.PacketGenerator (v1.0.5.0) tool.
// Do not edit this file manually.
#pragma warning disable CA1051

using Amethyst.Server.Network.Core.Packets;
using Amethyst.Server.Network.Utilities;

namespace Amethyst.Server.Network.Packets;

public sealed class PlayerLuckPacket : IPacket<PlayerLuck>
{
    public int PacketID => 134;

    public PlayerLuck Deserialize(ReadOnlySpan<byte> data, int offset = 0)
    {
        FastPacketReader reader = new(data, offset);

        byte PlayerIndex = reader.ReadByte();
        int LadyBugTimeLeft = reader.ReadInt32();
        float TorchLuck = reader.ReadSingle();
        byte LuckPotion = reader.ReadByte();
        bool HasGnomeNearby = reader.ReadBoolean();
        float EquipmentBonus = reader.ReadSingle();
        float CoinLuck = reader.ReadSingle();

        return new PlayerLuck
        {
            PlayerIndex = PlayerIndex,
            LadyBugTimeLeft = LadyBugTimeLeft,
            TorchLuck = TorchLuck,
            LuckPotion = LuckPotion,
            HasGnomeNearby = HasGnomeNearby,
            EquipmentBonus = EquipmentBonus,
            CoinLuck = CoinLuck,
        };
    }

    public byte[] Serialize(PlayerLuck packet)
    {
        FastPacketWriter writer = new(134, 128);

        writer.WriteByte(packet.PlayerIndex);
        writer.WriteInt32(packet.LadyBugTimeLeft);
        writer.WriteSingle(packet.TorchLuck);
        writer.WriteByte(packet.LuckPotion);
        writer.WriteBoolean(packet.HasGnomeNearby);
        writer.WriteSingle(packet.EquipmentBonus);
        writer.WriteSingle(packet.CoinLuck);

        return writer.BuildPacket();
    }
}

public struct PlayerLuck
{
    public byte PlayerIndex;
    public int LadyBugTimeLeft;
    public float TorchLuck;
    public byte LuckPotion;
    public bool HasGnomeNearby;
    public float EquipmentBonus;
    public float CoinLuck;
}