// Code is generated by the Amethyst.PacketGenerator (v1.0.5.0) tool.
// Do not edit this file manually.
#pragma warning disable CA1051

using Amethyst.Server.Network.Core.Packets;
using Amethyst.Server.Network.Utilities;

namespace Amethyst.Server.Network.Packets;

public sealed class SignSyncPacket : IPacket<SignSync>
{
    public int PacketID => 47;

    public SignSync Deserialize(ReadOnlySpan<byte> data, int offset = 0)
    {
        FastPacketReader reader = new(data, offset);

        short SignIndex = reader.ReadInt16();
        short SignX = reader.ReadInt16();
        short SignYString = reader.ReadInt16();
        SignText byte = reader.ReadUNKNOWN();
        PlayerIndex byte = reader.ReadUNKNOWN();

        return new SignSync
        {
            SignIndex = SignIndex,
            SignX = SignX,
            SignYString = SignYString,
            byte = byte,
            byte = byte,
        };
    }

    public byte[] Serialize(SignSync packet)
    {
        FastPacketWriter writer = new(47, 128);

        writer.WriteInt16(packet.SignIndex);
        writer.WriteInt16(packet.SignX);
        writer.WriteInt16(packet.SignYString);
        writer.WriteUNKNOWN(packet.byte);
        writer.WriteUNKNOWN(packet.byte);

        return writer.BuildPacket();
    }
}

public struct SignSync
{
    public short SignIndex;
    public short SignX;
    public short SignYString;
    public SignText byte;
    public PlayerIndex byte;
}